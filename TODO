Some issues for starlab4   (*'s have been done, -'s are to be done)
------------------------

* various "configure" related things have been added, notably

                        step1                step2
	config.h.in         -> config.h         -> inc/config.h
	cshrc.starlab.in    -> cshrc.starlab    -> local/cshrc.starlab
        
  so running configure again (step1) won't overwrite your configuration,
  since that is step2 which has to be done separately

* there will be a VERSION file, that will be updated at each version blessing
  (which precedes each code freeze). VERSION should contain one word, no
  space, e.g. 4.1, or 4.0.2 etc.. 

* inc/version.h (a new file) should be created automatically whenever VERSION
  has been updated:
	make version	

* 'make dist'   will make a snapshot of the current CVS release in a tarball
  with directory name starlab_VERSION, this is the preferred way to make
  export tar balls for non-CVS users.

- if an old $STARLAB_PATH is present, the current scheme "starlab_start" is
  not clean. Perhaps it should assume no STARLAB_PATH ?? Alternatively, there
  is starlab_end, which could be called..... (automatically?)

- use flags in a consistent way, such that -I and -L additions are not needed
  in the makefiles. In particular, linking X11 application in starlab3 has:
	-L$(STARLAB_X11LIB) -lX11 $(STARLAB_XLIB)
  and I needed to make it
	$(STARLAB_X11LIB) $(STARLAB_XLIB)

- to solve the makefile.SITE issue in src/node/dyn/hdyn/util and
  src/node/dyn/hdyn/evolve i suggest we use a SITE variable in the makefile,
  look at the Makefile's config_new target. In general, we could also solve
  this using two STARLAB_GRAPE_* variables? See cshrc.starlab.in for comments.

- update TOOLS
	
- use of the CPP preprocessor is only guarenteed for .c files... we use .F
  but i've seen  for gnu
	cpp file.F > file.f
  and for others i also saw in the original Makefile's
	cpp file.F file.f
  (which does not work for gnu)
  Or is the -E or -P flag the trick here. At any rate,need to figure out a consistent
  syntax.

- Makefile will be removed, and called Makefile.in, since configure should create
  it.

- rehosting the STARLAB_PATH directory root to another place will break --help,
  since it ignores $STARLAB_PATH and looks at the path during installation

- remove redundancies in Makefile's by using a 'makedefs' file that can be
  included

- right now environment variables are used galore, which means it is always a bit
  confusing what to do when something has been modified. The best is still to open
  a new shell. If everything is done through a makedefs type solution, changes are
  immediate.
