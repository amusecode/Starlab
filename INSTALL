

--------------------------------------------------------------------------------

To upgrade your existing starlab, assumed to be under CVS control, most of
the time the following should work:

	cd $STARLAB_PATH
	cvs update -d
	make sure

sometimes you may need to run configure (of config.status) again, and 
logout/in again (or source the correct files)

--------------------------------------------------------------------------------

First time install of starlab 4.x 

1)  Choose to take a blessed ('stable') release in the form of a compressed
    tar file, or be on the bleeding edge, use CVS access:

	goto step 2a) or 2b)

2a) Obtain a tarball from the archive:

	tar zxf starlab_4.0.2.tar.gz
	cd starlab_4.0.2
	
	(goto step 3a)

2b) CVS access (developers, but for guest, use the password "guest", which
	gives you read-only access)

	setenv CVSROOT :pserver:guest@akash.astro.umd.edu:/home/cvsroot
	cvs login
	cvs checkout starlab
	cd starlab
	
	(goto step 3a or 3b)

3a) New method (configure based starlab 4.x based)

    The simplest way to install would be the following command (from the starlab
    root directory):

	source AAA_SOURCE_ME


3b) A more manual way would be the following set of commands:

			(optionally override compilers if you need to fool the system)
			(not well tested yet)
	setenv CC   ...
	setenv CXX  ...
	setenv F77  ...

	configure
	make config_new [SITE=linux]       (other optional names: .....)
		(this is stilfl nasty, a SITE name must be given to
		copy Makefile.$SITE to Makefile; otherwise hdyn in this
 		case will not be built)
	source starlab_start
	make all
	

3c) Old method (pre-configure, or starlab 3.x and below) - some comments on
    installations of broken starlab 4.x may still apply here

	mkdir local		(it may already exist though)

	cp templates/Makefile.local.inc        local
	cp templates/starlab_setup             local
	cp templates/cshrc.starlab.YOUR_SYSTEM local/cshrc.starlab

    the first two files probably don't need any local modifications,
    but the cshrc.starlab not only should be selected from best matching
    YOUR_SYSTEM (redhat62, linux, solaris, ...) but may still need
    modifications for your local site.


(( PJT::::  DO WE STILL WANT TO MAINTAIN THESE EXPORT LEVELS ))

- Copy (or ftp) the most recent Starlab tar file, of the form 

    "yymmddhh.s_tar_lab_version"
    "yymmddhh.s_tar_lab_version_min" (for an absolutely minimal version)
    "yymmddhh.s_tar_lab_version_0"   (for a fairly complete system)
    "yymmddhh.s_tar_lab_version_1    (for a version with additional user code)
    "yymmddhh.s_tar_lab_version_2    (for an even more extended version)

  from the main Starlab directory to the private "starlab"
  directory that you have just created.

  The "_1" and "_2" versions of the tar file contain additional user-written
  material (including versions of Aarseth's N-body codes in forms that work
  in the Starlab environment). To find out how to use them, consult an
  experienced user.

	Do NOT unbundle the tar file in the "starlab" directory itself.

((PJT::OLD))
- Make a subdirectory "starlab/version/local" and copy the files
  contained in "starlab/version/templates", currently:

	"starlab/version/templates/starlab_setup"
	"starlab/version/templates/cshrc.starlab"
	"starlab/version/templates/cshrc.add-on"		** seems OLD **
	"starlab/version/templates/Makefile.local.inc"

  into it.  That is, issue the command:

	cd starlab ; mkdir local; cp templates/* local

  These files are your local copies of the Starlab setup files that
  will never be accidentally overwritten by untarring a new new Starlab
  archive.  The distribution contains versions appropriate for use on
  various common systems.  On other systems, you will probably have to
  modify your copies of cshrc.starlab and Makefile.local.inc by
  commenting or uncommenting some of the lines in them.  Ask a Starlab
  expert how to do this if it isn't obvious. 

  Note carefully the use of the following variables, which are
  defined at the start of local/cshrc.starlab and determine how much
  of the system is actually built by the "make all" command. Commenting
  out all the lines (as provided) builds only the "minimal" package.

#setenv	STARLAB_STAR	star		# Stellar evolution
#setenv	STARLAB_HYDRO	hydro		# Hydrodynamics
#setenv	STARLAB_KEPLER	kepler		# Kepler package (used by sdyn*)
#setenv	STARLAB_MCD	"libs draw"	# Mcdraw graphics programs (need gfx)
#setenv	STARLAB_GFX	gfx		# Graphics library
#setenv	STARLAB_XUTIL	xutil		# X utilities (xstarplot uses gfx)
#setenv	STARLAB_DYN	dyn		# Dynamics programs
#setenv	STARLAB_HDYN	hdyn		# Hermite programs
#setenv	STARLAB_SDYN	sdyn		# Multi-particle scattering
#setenv	STARLAB_SDYN3	sdyn3		# Three-body scattering

  To build anything more complex (e.g., the _0 version), comment the
  appropriate lines "back in".  An automated way to modify these
  options is to use the scripts add_options and remove_options.  Thus,
  to add stellar evolution and basic dynamics, say:

	add_options STAR DYN

  (and then re-source your .cshrc file to reset your environment).

  Note that these options also determine what gets placed in a tar file
  with the "make tar_curr" command.

  The use of these variables allows us to distribute subsets of the
  Starlab without having to modify the directory or make structure of 
  the package.

3) To set up the Starlab environment, include the following lines in
   your .cshrc file:

     setenv STARLAB_PATH <starlab-directory-name>
     source $STARLAB_PATH/local/starlab_setup

  For example, if you downloaded starlab version 3.7 as a tar ball
  
     setenv STARLAB_PATH ~/starlab-3.7
     source $STARLAB_PATH/local/starlab_setup

  The file starlab_setup MUST be sourced from .cshrc, not .login, in order
  for the starlab environment to be visible during the "make" process.

- If your search path is set in .cshrc (before invoking starlab_setup),
  then you need do nothing more: Starlab will set your path correctly.
  If your path is set up in .login (or anywhere after starlab_setup
  is used), you must add Starlab to your path afterwards as follows:

	set path = ($path $STARLAB_PATH/bin $STARLAB_PATH/sbin)
	rehash

- Finally, enter the command "source .cshrc", or log out and log in
  again, and you are ready to go!  To build Starlab, type

	cd $STARLAB_PATH
	make all
	rehash

 - NOTE:  A few files are hard to maintain in an automated way:

	(1) For unknown reasons, some make-related scripts in sbin
	    fail under some Redhat Linuxes unless they explicitly use
	    tcsh.  See sbin/README for details.

	    SINCE THE CURRENT DISTRIBUTION IS MAINTAINED ON A REDHAT
	    LINUX SYSTEM, THIS IS RELEVANT TO ALL STARLAB USERS!

	    In general, the location of the shells csh are tcsh are
	    not completely standard.  The above README file describes
	    our way of handling this problem.

	(2) The Makefile in the kira directories:

		src/node/dyn/hdyn/evolve/Makefile
		src/node/dyn/hdyn/util/Makefile

	    have too many possible options and switches to set or
	    change them from the environment, so a custom version of
	    the file must be maintained.  Copies of these files are
	    exported as Makefile.export when a tar backup is made, so
	    they will not overwrite any existing (carefully
	    constructed) Makefile when an update to Starlab is
	    untarred.  However, this means that, when Starlab is
	    initially installed, NO file named "Makefile" exists in
	    .../hdyn/evolve and util.  In this case, Makefile.export
	    must be renamed to Makefile, or numerous build problems
	    will ensue.

	(3) We have adopted the convention that backup versions of
	    files under development should be saved with a prepended
	    numeric string representing the date on which the version
	    was saved, e.g. 960612_kira.C.  To avoid exporting such
	    files, NO source (*.[hcCfF]) file beginning with a digit
	    will be saved in the standard Starlab tarfile.

 - A partial list of Starlab tools may be found in "starlab/TOOLS"

 - For further information, see "starlab/doc/README"

 - For some sample programs, see "starlab/etc/demo"


******

Dec-2000: Example "cut and paste session" to setup starlab on redhat62:

cd starlab	 ( or whereever you're in the starlab root directory)
	
cp templates/Makefile.local.inc      local                     #### not needed anymore
cp templates/starlab_setup           local
cp templates/cshrc.starlab.redhat62  local/cshrc.starlab

setenv STARLAB_PATH `pwd`
source $STARLAB_PATH/local/starlab_setup

cp src/node/dyn/hdyn/evolve/Makefile.linux src/node/dyn/hdyn/evolve/Makefile
cp src/node/dyn/hdyn/util/Makefile.linux src/node/dyn/hdyn/util/Makefile
make libs bins >& LOG1



On a Piii600/256M/15MB/sec machine this takes about 3.5 minutes.
