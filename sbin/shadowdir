#
# Create a directory shadowing a specified one.  Intended application is
# to allow multiple Starlab trees to share a single source tree, for use
# with different architectures.

if ($#argv < 1) then
    echo Usage: shadowdir target-directory-name \[shadow-directory-name\]
    exit
endif

# Make sure curr is a full pathname (not relative to .).  Note that,
# as usual, we have to be careful of the "pwd" functions.  On DecUNIX,
# the command pwd prepends a /tmp_mount to all automounted directory
# names, which causes symbolic links to fail on linux, which doesn't
# prepend and doesn't understand.  In csh, the $cwd variable in csh
# also has the /tmp_mount, and $PWD doesn't exist.  Hence we have to
# use tcsh (where pwd, cwd and PWD are all fine even in DecUNIX).
# However, we can't force this in the #magic first line, because we
# don't know where tcsh is in general (/usr/local/bin in DecUNIX, /bin
# in linux)!!  Thus, the best we can do is to use the # and assume
# that we are using tcsh when we invoke this script!  What an annoying
# operating system...

set curr = $cwd
chdir $1
set dir = $cwd
chdir $curr

set shadow = ~/shadow_tmp
if ($#argv > 1) set shadow = $2

set dlist = (`chdir $dir; find . -type d | grep -v CVS`) # not too many, I hope!

if ($#dlist > 0) then

    set precious = (hdyn/evolve hdyn/util)		# Makefiles to save
    set savelist = ()

    if (-d $shadow) then

#	Ask before overwriting an existing directory.

	echo -n "Overwrite existing directory $shadow? "
	set resp = $<

	if (X$resp != Xy && X$resp != XY) then
	    echo Aborted
	    exit
	endif

#	Must save some Makefiles in a Starlab shadow directory tree to
#	avoid having them overwritten or deleted.  Their directories are
#	defined in $precious.  If the Makefiles exist in the current
#	shadow directory tree, save them and restore them at the end.
#	A somewhat half-baked way of doing this follows:

	chdir $shadow
	set mlist = (`find . -name Makefile`)
	if ($#mlist > 0) then
	    @ i = 0
	    foreach m ($precious)
	    foreach M ($mlist)
		set tmp = (`echo $M | grep $m`)
		if ("X$tmp" != "X") then
		    if (! -l $tmp) then

			@ i++

#			Makefile exists and is a real file (not a link).
#			Save Makefile $tmp as $corr/Makefile.save.$i
#			and store its name in $savelist[$i].

			mv $tmp $curr/Makefile.save.$i
			set savelist = ($savelist $tmp)

			echo Saved $shadow/$tmp in $curr/Makefile.save.$i

		    endif
		endif
	    end
	    end
	endif
	chdir $curr

	/bin/rm -r -f $shadow
	echo Directory deleted

    endif

    mkdir $shadow
    chdir $shadow

#   Make shadow into a full pathname.

    set shadow = $cwd

#   Create the entire shadow directory tree before making any links.

    foreach sub ($dlist)

#	Order of traversal by find should ensure that parent
#	directories precede their children on the list.

	if (! -d $sub) then
	    mkdir $sub
#	    echo Created $sub
	endif

    end

    echo Created shadow directory tree of $#dlist nodes

#   Now traverse the shadow tree, creating links to all
#   source and header files.

    foreach sub ($dlist)

#	List relevant files in just directory $dir/$sub.
#	(Note special Starlab cases for setup...)

	if (X$sub == X.) then
	    set flist = (starlab_start VERSION Makefile)	# Starlab...
	else if (X$sub == X./local) then
	    set flist = (`chdir $dir/$sub; find * -prune -type f`)
	else if (X$sub == X./sbin) then
	    set flist = (`chdir $dir/$sub; find * -prune -type f`)
	else
	    set flist = \
		(`chdir $dir/$sub; find * -prune -name '*.[cCfFh]' -o -name '[A-Z]*' | grep -v CVS`)
	endif

	if ($#flist > 0) then
	    foreach file ($flist)
		if (-e $dir/$sub/$file) then
		    ln -s $dir/$sub/$file $shadow/$sub/$file
		endif
	    end
	    echo "    " $#flist links in $sub
	endif
    end

    echo "Shadow directory $shadow successfuly created"

    if ($#savelist > 0) then

#	Restore saved Makefiles.

	chdir $shadow
        @ i = 0
	foreach m ($savelist)
	    @ i++
	    mv $curr/Makefile.save.$i $savelist[$i]

	    echo Restored $shadow/$savelist[$i]

	end
	chdir $curr
    endif

endif
